#!/usr/bin/env bash
# I hate pulseaudio
# Changes the output device


# Check if tput exists
if ! command -v tput >/dev/null; then
	printf "Error: tput is not installed\n"
	exit -1
fi

if ! pidof pulseaudio >/dev/null; then
	printf "Error: Pulseaudio is not running\n"
	exit -1
fi




output=$(pacmd list-cards)
options=$(printf '%s' "$output" | grep -Po '\s+output:.*: \K.*(?= [(]priority)')
returned=0
selected=1

lines=$(echo "$options" | wc -l)

trap "tput sgr0; tput cuu $lines; tput cuu 3; tput ed; exit" SIGINT

tput setaf 3
printf 'j: UP;  K: Down;  Enter / Space: Select;  q: Quit\n'
printf '              !!! NO ARROW KEYS !!!\n'
printf '%s\n' '-------------------------------------------------'

tput sgr0
while [ $returned -eq 0 ]; do
	selectedString=$(echo "$options" | awk "NR==$selected{print}")

	echo "$options" | while read line; do
		[ "$selectedString" = "$line" ] &&
			tput rev

		printf '%s\n' "$line"
		tput sgr0
	done


 	read -rsn1 input
 	if [ "$input" = 'j' ] && [ ! $selected -eq $lines ]; then
 		selected=$(expr $selected + 1)
 	elif [ "$input" = 'k' ] && [ ! $selected -eq 1 ]; then
 		selected=$(expr $selected - 1)
 	elif [ "$input" = 'q' ] ; then
		returned=-1
 	elif [ "$input" = ' ' ] || [ "$input" = '' ] ; then
		returned=$selected
 	fi

	tput cuu $lines
	tput ed
done

tput cuu 3
tput ed

if [ $returned -eq -1 ]; then
	exit
fi

echo "Changing output device to: ${selectedString}"
profile=$(printf '%s' "$output" | grep "$selectedString (priority" | cut -d ':' -f 2)

pacmd set-card-profile 0 "output:${profile}"
if [ $? -eq 0 ]; then
	echo "Successfully changed device to ${selectedString}!"
	echo "Restarting pulseaudio"
	killall pulseaudio
	setsid -f pulseaudio --start --exit-idle-time=-1 && echo "Restarted pulseaudio"
else
	echo "Failed to change devices"
fi
