#!/bin/sh
# Shell configuration to source all other shell configuration files
set -o vi   # Vi mode, works on most shells
[ "$(command -v stty)" ] && stty -ixon 	# Disable Ctrl-q and Ctrl-s
export HISTFILE=/tmp/shell_history


if [ "${BASH}" ]; then
	# Bash Specific configuration
	complete -c man which
	complete -cf sudo
	shopt -s autocd
	shopt -s checkwinsize

	[ -f /usr/share/bash-completion/bash_completion ] &&
		. /usr/share/bash-completion/bash_completion
elif [ "${ZSH_NAME}" ]; then
	# Zsh Specific configuration
	setopt autocd

	bindkey -v '^H' backward-delete-char
	bindkey -v '^?' backward-delete-char
	setopt PROMPT_SUBST
fi



# Prompt
print_prompt() {
	ret=$?
	dir_col=$'\033[38;5;11m'
	success_col=$'\033[38;5;6m'
	failed_col=$'\033[38;5;1m'
	branch_col=$'\033[38;5;8m'
	if [ -z "${PWD##${HOME}*}" ]; then
		printf '\001\033[1m\002\001%b\002%s' "${dir_col}" "~${PWD##${HOME}}"
	else
		printf '\001\033[1m\002\001%b\002%s' "${dir_col}" "${PWD}"
	fi


	if [ "$(command -v git)" ]; then
		branch="$(git branch 2>&-)"
		IFS='
		'
		for line in "${branch}"; do
			[ -z "${branch}" ] && break

			if [ -z "${line##[*]*}" ]; then
				printf '\001%b\002 [ %s ]' "${branch_col}" "${line##[*] }"
				break
			fi
		done
	fi

	if [ ${ret} -eq 0 ]; then
		printf '\n\001%b\002>\001\033[0m\002 ' "${success_col}"
	else
		printf '\n\001%b\002>\001\033[0m\002 ' "${failed_col}"
	fi
}
export PS1="\$(print_prompt)"



# ALIASES #
alias emacs="emacs -nw"
alias mkdir="mkdir -pv"
alias diff="diff --color=always"
alias grep="grep --color=auto"
alias wget='wget --hsts-file="/tmp/wget-hsts"'
alias sxiv="sxiv -o"
alias ls="ls --color --group-directories-first"
alias mv="mv -i"
alias rm="rm -i"
alias cp="cp -i"
alias ip="ip --color=auto"
alias gscr='cd "${HOME}"/.config/scripts/; ls'
alias grice='cd "${HOME}"/.local/rice; ls'
alias makepkgmem="BUILDDIR=/tmp/makepkg makepkg"
alias parumem="paru --clonedir /tmp/makepkg"
alias sx='startx ${HOME}/.config/X11/xinitrc'



# Functions #
colors() {
	i=0
	while [ ${i} -ne 255 ]; do
		printf "\033[38;5;${i}mcolour${i} "
		i=$((i + 1))
	done
	printf '\n'
	unset i
}


dit() {
	if [ "${1}" = "files" ]; then
		printf "Red means that the file exists in the repo but doesn't in this machine.\n"
		while read line; do
			if [ -f "$HOME/${line}" ]; then
				printf '~/%b\n' "${line}"
			else
				printf '\033[38;5;1m~/%b\033[0m\n' "${line}"
			fi
		done <<-EOF
		$(cd "${HOME}"; git --git-dir="${HOME}"/.local/dots/ --work-tree="${HOME}" ls-tree -r master --name-only)
		EOF
	else
		git --git-dir=$HOME/.local/dots/ --work-tree=$HOME "$@"
	fi
}


e() {
	if [ "${EDITOR}" = "emacs" ] && [ "$(command -v emacsclient)" ]; then
		emacsclient -a ${EDITOR} "$@"
	else
		${EDITOR} "$@"
	fi
}

doar() { eval "su -c '$@'"; }



# Misc ENV Variable Exporting
export UEBERZUG_FIFO=/tmp/ueberzug-fifo

# LESS (for man pages)
export LESS_TERMCAP_mb=$'\033[1;32m'
export LESS_TERMCAP_md=$'\033[1;32m'
export LESS_TERMCAP_me=$'\033[0m'
export LESS_TERMCAP_se=$'\033[0m'
export LESS_TERMCAP_so=$'\033[01;33m'
export LESS_TERMCAP_ue=$'\033[0m'
export LESS_TERMCAP_us=$'\033[1;4;31m'
