#!/bin/sh
export XDG_DATA_HOME=${XDG_DATA_HOME:="$HOME/.local/share"}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:="$HOME/.cache"}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:="$HOME/.config"}
export XDG_DESKTOP_DIR="${HOME}"

# Add directories to PATH if they don't exist already
for dir in /sbin/ \
			   "${HOME}"/.config/scripts/ \
			   "${HOME}"/.config/scripts/*/ \
			   "${HOME}"/.local/bin/ \
			   "${HOME}"/.local/bin/*/
do
	[ "${PATH##*${dir%/}*}" ] &&
		[ -d "${dir}" ] &&
		PATH="${PATH}:${dir%/}"
done
export PATH


export LESSHISTFILE=/dev/null
export CCACHE_DIR=${HOME}/.cache/ccache
export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo

export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
export PYLINTHOME="$XDG_CACHE_HOME"/pylint

export WINIT_X11_SCALE_FACTOR=1

[ "$(command -v emacs)" ] && export TERMINAL="emacs" && export EDITOR="emacs"
[ "$(command -v zathura)" ]       && export READER="zathura"
[ "$(command -v brave-browser)" ] && export BROWSER="brave-browser"


# Vim in $XDG_CONFIG_HOME/vim/vimrc i.e ~/.config/vim/vimrc
export VIMINIT='let $MYVIMRC = !has("nvim") ? "$XDG_CONFIG_HOME/vim/vimrc" : "$XDG_CONFIG_HOME/nvim/init.vim" | so $MYVIMRC'

# Fix some gnupg messed up permission or something, idk
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
if [ ! -d "${GNUPGHOME}" ]; then
	mkdir -pv "${GNUPGHOME}"
	chmod 700 "${GNUPGHOME}" # Set 700 for directories
fi

# Java
export _JAVA_AWT_WM_NONREPARENTING=1
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java

# Android
export ANDROID_PREFS_ROOT="$XDG_CONFIG_HOME"/android
export ANDROID_EMULATOR_HOME="$XDG_DATA_HOME"/android/emulator

# Zoom
export SSB_HOME="$XDG_DATA_HOME"/zoom

# Wine
export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default

# Language/Locale
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Pass
export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass

# Gtk & Qt
[ "$(command -v qt5ct)" ] && export QT_QPA_PLATFORMTHEME=qt5ct # if qt5ct is installed
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc

# Shell
export ENV="${HOME}"/.config/shellconfig/main_rc
export ZDOTDIR="${HOME}/.config/shellconfig"

# Cargo
export CARGO_HOME="$XDG_DATA_HOME"/cargo

if [ "$(command -v simplescreenrecorder)" ]; then
	mkdir -vp "${XDG_CONFIG_HOME}/simplescreenrecorder/"
fi

# Nix
[ -f "${HOME}/.nix-profile/etc/profile.d/nix.sh" ] &&
	. "${HOME}/.nix-profile/etc/profile.d/nix.sh"


# Symlink / remove bash config file if needed
if [ "${BASH_VERSION}" ] && [ -f "${ENV}" ] && ! [ -L "${HOME}/.bashrc" ]; then
	[ -f "${HOME}/.bashrc" ] && mv "${HOME}/.bashrc" "${HOME}/.bashrc_old"
	ln -s "${ENV}" "${HOME}/.bashrc"
elif ! [ "${BASH_VERSION}" ] && [ -L "${HOME}/.bashrc" ]; then
	rm "${HOME}/.bashrc"
fi

# Symlink / remove zsh config file if needed
if [ "${ZSH_NAME}" ] && [ -f "${ENV}" ] && ! [ -L "${ZDOTDIR}/.bashrc"]; then
	ln -s "${ENV}" "${ZDOTDIR}/.zshrc"
elif ! [ "${ZSH_NAME}" ] && [ -L "${ZDOTDIR}/.zshrc" ]; then
	rm "${ZDOTDIR}/.zshrc"
fi

# Source config file
[ -f "${ENV}" ] && . "${ENV}"

# Start xserver if in tty1
if command -v startx >/dev/null && [ "$(tty)" = "/dev/tty1" ]; then
	printf '\033[1;32m::\033[0m Start X Session \033[36m [Y/n] \033[0m'
	read -t 3 OPT

	case "${OPT%${OPT#?}}" in
		[Yy]|"") startx $HOME/.config/X11/xinitrc ;;
		*) echo "Will not run X server" ;;
	esac
fi
